

--JOIN

SELECT * FROM TBL_TEST_ORDER;
SELECT * FROM TBL_TEST_GOODS;
SELECT * FROM TBL_TEST_CUSTOMER;

--에이콘 쇼핑몰 정보
--OUTER조인 : 조인하는 테이블 양쪽 모두 존재하지 않아도 조회함

--INNER조인 : 조인하는 테이블 양쪽에 모두 존재하는 것만 조회하는 조인
--EQUAL INNER 조인 : ON절의 조인 조건이 = 인 것

SELECT * 
FROM TBL_TEST_ORDER O
JOIN TBL_TEST_CUSTOMER C
ON O.ID = C.ID;

-- 고객별 판매수량 합계

SELECT C.NAME, O.SALE_CNT
FROM TBL_TEST_ORDER O
JOIN TBL_TEST_CUSTOMER C
ON O.ID = C.ID;


--JOIN은 INNER조인, INNER생략가능함
SELECT C.NAME, SUM(O.SALE_CNT)
FROM TBL_TEST_ORDER O
INNER JOIN TBL_TEST_CUSTOMER C
ON O.ID = C.ID
GROUP BY C.NAME;


--고객별 주문수량의 합계, 주문하지 않은 고객도 합계 조회
--OUTER JOIN

--

SELECT * FROM TBL_TEST_ORDER;
SELECT * FROM TBL_TEST_CUSTOMER;

SELECT * 
FROM TBL_TEST_ORDER O
RIGHT OUTER JOIN tbl_test_customer C
ON C.ID = O.ID;


--

SELECT C.NAME, NVL(o.sale_cnt,0)
FROM TBL_TEST_ORDER O
RIGHT OUTER JOIN tbl_test_customer C
ON C.ID = O.ID;


--고객별 판매수량의 합계(주문하지 않은 고객도 포함되도록)

SELECT C.NAME, NVL(SUM(o.sale_cnt),0)
FROM TBL_TEST_ORDER O
RIGHT OUTER JOIN tbl_test_customer C
ON C.ID = O.ID
GROUP BY C.NAME;

SELECT C.NAME, NVL(SUM(o.sale_cnt),0) TOTAL_CNT
FROM TBL_TEST_ORDER O
RIGHT OUTER JOIN tbl_test_customer C
ON C.ID = O.ID
GROUP BY C.NAME
ORDER BY TOTAL_CNT DESC;


--글(테이블)
--댓글(테이블)



--INNER JOIN
--OUTER JOIN

--ON절 조인의 조건이 무엇이냐??
--EQUI JOIN , =
--NON EQUI JOIN , >, <

--P236
--NON EQUI JOIN
SELECT * FROM CUSTOMER;
SELECT * FROM GIFT;


--
SELECT * 
FROM CUSTOMER C
JOIN GIFT G
ON C.POINT >= G.G_START AND C.POINT <=G.G_END
;


--CROSS JOIN
--JOIN의 조건이 없는 조인
SELECT * 
FROM TBL_TEST_ORDER
CROSS JOIN TBL_TEST_CUSTOMER
;
--5*3 => 15개
--100*100 => 10000개

--SELF JOIN

SELECT * FROM EMP;

SELECT EMPNO, ENAME, MGR
FROM EMP;

SELECT E1.ENAME ENAME, E2.ENAME MGR_NAME
FROM EMP E1
JOIN EMP E2 
ON E2.EMPNO = E1.MGR;

--INNER, INNER생략가능
--OUTER - LEFT OUTER RIGHT OUTER FULL OUTER
--CROSS JOIN
--SELF SELF
